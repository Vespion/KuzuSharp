#on:
#  push:
#    branches:
#      - main
#    paths:
#      - 'src/Native/**'
#
#jobs:
#  prep-native-builders:
#    runs-on: ubuntu-latest
#    steps:
#        - name: Checkout
#          uses: actions/checkout@v4
#          with:
#            fetch-depth: 1
#            submodules: true
#            sparse-checkout: |
#                src/Native/Earthfile
#
#        - name: Setup Earthly
#          uses: earthly/actions-setup@v1
#          with:
#            version: v0.8.0
#
#        - name: Prep linux image
#          working-directory: src/Native
#          run: earthly --ci +setup-linux
#
#  build-native-libs:
#    name: Build Native Library (${{ matrix.os }} - ${{ matrix.arch }})
#    runs-on: ubuntu-latest
#    needs:
#      - prep-native-builders
#    strategy:
#      matrix:
#        os: [linux, win]
#        arch: [x86, x64, arm64, arm]
#        exclude:
#          - os: win
#            arch: arm64
#          - os: win
#            arch: arm
#    steps:
#        - name: Checkout
#          uses: actions/checkout@v4
#          with:
#            fetch-depth: 1
#            submodules: true
#            sparse-checkout: |
#              src/Native/kuzu
#              src/Native/toolchains
#              src/Native/Earthfile
#
#        - name: Setup Earthly
#          uses: earthly/actions-setup@v1
#          with:
#            version: v0.8.0
#
#        - name: Build
#          working-directory: src/Native
#          run: earthly --ci +build-native --OS=${{ matrix.os }} --ARCH=${{ matrix.arch }}
#
#        - name: Upload artifact
#          uses: actions/upload-artifact@v4
#          with:
#            name: kuzu-${{ matrix.os }}-${{ matrix.arch }}
#            path: |
#              src/Native/kuzu/install/lib/libkuzu*
#              src/Native/kuzu/install/lib/kuzu_shared.*
#
#  build-nuget-pkg:
#    name: Build nuget package
#    runs-on: ubuntu-latest
#    needs:
#      - build-native-libs
#    steps:
#        - name: Checkout
#          uses: actions/checkout@v4
#          with:
#            fetch-depth: 1
#            submodules: false
#            sparse-checkout: |
#              src/Native
#
#        - name: Set up .NET
#          uses: actions/setup-dotnet@v1
#          with:
#              dotnet-channel: 'ga'
#
#        - name: Download x64 artifacts
#          uses: actions/download-artifact@v4
#          with:
#            pattern: kuzu-*-x64
#            merge-multiple: true
#            path: src/Native/obj/Release/libs/x64
#
#        - name: Download x86 artifacts
#          uses: actions/download-artifact@v4
#          with:
#            pattern: kuzu-*-x86
#            merge-multiple: true
#            path: src/Native/obj/Release/libs/x86
#
#        - name: Download arm artifacts
#          uses: actions/download-artifact@v4
#          with:
#            pattern: kuzu-*-arm
#            merge-multiple: true
#            path: src/Native/obj/Release/libs/arm
#
#        - name: Download arm64 artifacts
#          uses: actions/download-artifact@v4
#          with:
#            pattern: kuzu-*-arm64
#            merge-multiple: true
#            path: src/Native/obj/Release/libs/arm64
#
#        - name: Pack
#          run: dotnet pack src/Native/Native.csproj -c Release -o src/Native/bin/Release
#
#        - name: Upload artifact
#          uses: actions/upload-artifact@v4
#          with:
#            name: nupkg
#            path: src/Native/bin/Release/KuzuSharp.Native.*.nupkg
#            retention-days: 2
#            if-no-files-found: error
#
###        - name: Install GitHub CLI
###          if: ${{ env.ACT }} # Run if ACT is set
###          run: |
###            mkdir -p -m 755 /etc/apt/keyrings && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
###            && chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
###            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
###            && apt update \
###            && apt install gh -y
###
###        - name: Get kuzu release notes
###          id: get_release_notes
###          run: |
###            echo "::set-output name=release_notes::$(gh api graphql -f query='{repository(owner: "kuzudb", name: "kuzu") {release(tagName: "v${{ inputs.kuzu_version }}") {description}}}' | jq -r '.data.repository.release.description')"
###          shell: bash
###          env:
###            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}